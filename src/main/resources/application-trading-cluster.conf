akka {
  loglevel = "INFO"
  stdout-loglevel = "INFO"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    deployment {
      /tradingShardManagerRouter = {
        router = broadcast-group
        nr-of-instances = 100
        routees.paths = ["/user/tradingShardManager"]
        cluster {
          enabled = on
          #allow-local-routees = on
        }
      }
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "192.191.1.66"
      port = 0
    }
  }
  cluster {
    roles = [exchange]
    seed-nodes = [
        "akka.tcp://TradingShard@192.191.1.66:2551",
        "akka.tcp://TradingShard@192.191.1.216:2552"]
    auto-down-unreachable-after = 10s
  }
}

exchange{
    192.191.1.66 {
        cluster0 {
            securities = ["Audi", "BMW"]
        }

        cluster1 {
            securities = ["Skoda", "VW"]
        }
    }
    192.191.1.216 {
        cluster0 {
            securities = ["Horch", "EMW"]
        }

        cluster1 {
            securities = ["Foo", "Bar"]
        }
    }
}


market {
    akka {
      loglevel = "DEBUG"
      stdout-loglevel = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "192.191.1.66"
          port = 0
        }
      }
      cluster {
        roles = [market]
        auto-join = off
      }
    }

    participants {
        count = 10
        depot {
            min = 100
            max = 10000
        }
        deposit {
            min = 500000
            max = 10000000
        }
    }
}